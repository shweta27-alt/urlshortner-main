{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../../assets/loading.gif';\nconst _withScopeId = n => (_pushScopeId(\"data-v-c97d81bc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"loading-image\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"container\"\n};\nconst _hoisted_5 = {\n  class: \"main-content\"\n};\nconst _hoisted_6 = {\n  class: \"username\"\n};\nconst _hoisted_7 = {\n  class: \"password\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"error-text\"\n};\nconst _hoisted_9 = {\n  class: \"consfirm-password\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"error-text\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"error-text\"\n};\nconst _hoisted_12 = {\n  class: \"login-button-div\"\n};\nconst _hoisted_13 = [\"disabled\"];\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Reset Password\", -1 /* HOISTED */));\nconst _hoisted_15 = [_hoisted_14];\nconst _hoisted_16 = {\n  class: \"lower-part\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_auth_wrapper = _resolveComponent(\"auth-wrapper\");\n  return $data.isloading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_auth_wrapper, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone number or email address\",\n      class: \"reset-password-input-field\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n      onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.resetPassword && $options.resetPassword(...args), [\"enter\"]))\n    }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      class: \"reset-password-input-field\",\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n      onInput: _cache[3] || (_cache[3] = (...args) => $options.validatePassword && $options.validatePassword(...args)),\n      onKeyup: _cache[4] || (_cache[4] = _withKeys((...args) => $options.resetPassword && $options.resetPassword(...args), [\"enter\"]))\n    }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.password]]), $data.showPasswordError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString($data.showPasswordErrorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm New Password\",\n      class: \"reset-password-input-field\",\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.confirmPassword = $event),\n      onInput: _cache[6] || (_cache[6] = (...args) => $options.validateConfirmPassword && $options.validateConfirmPassword(...args)),\n      onKeyup: _cache[7] || (_cache[7] = _withKeys((...args) => $options.resetPassword && $options.resetPassword(...args), [\"enter\"]))\n    }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), $data.showConfirmPasswordError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, _toDisplayString($data.showConfirmPasswordErrorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), $data.showError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n      class: \"login-button\",\n      onClick: _cache[8] || (_cache[8] = (...args) => $options.resetPassword && $options.resetPassword(...args)),\n      disabled: !($data.username && $data.password && !$data.showPasswordError && $data.confirmPassword && !$data.showConfirmPasswordError)\n    }, _hoisted_15, 8 /* PROPS */, _hoisted_13)])])]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_16, [_createTextVNode(\" Back to login? \"), _createElementVNode(\"div\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.goToLogin && $options.goToLogin(...args)),\n    class: \"login\"\n  }, \"Login\")])]));\n}","map":{"version":3,"mappings":";OAEWA,UAA8B;;;;EADfC,KAAK,EAAC;;gEAC1BC,oBAAsC;EAAjCC,GAA8B,EAA9BH;AAA8B;oBAAnCI,UAAsC;;;EAEnCH,KAAK,EAAC;;;EAEFA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAU;;EAUhBA,KAAK,EAAC;AAAU;;;EAShBA,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAmB;;;EASzBA,KAAK,EAAC;;;;EAIRA,KAAK,EAAC;;;EAGJA,KAAK,EAAC;AAAkB;;iEAczBC,oBAA+B,gBAAvB,gBAAc;qBAAtBG,WAA+B;;EAMlCJ,KAAK,EAAC;AAAY;;;SAjEdK,eAAS,kBAApBC,oBAEM,OAFNC,UAEM,gCACND,oBAkEM,OAlENE,UAkEM,GAjEJC,aA2DeC;sBA1Db,MAyDM,CAzDNT,oBAyDM,OAzDNU,UAyDM,GAxDJV,oBAQM,OARNW,UAQM,mBAPJX,oBAME;MALAY,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,+BAA+B;MAC3Cd,KAAK,EAAC,4BAA4B;iEACzBK,cAAQ;MAChBU,OAAK,mDAAQC,yDAAa;mEADlBX,cAAQ,OAKrBJ,oBAYM,OAZNgB,UAYM,mBAXJhB,oBAOE;MANAY,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,cAAc;MAC1Bd,KAAK,EAAC,4BAA4B;iEACzBK,cAAQ;MAChBa,OAAK,yCAAEF,+DAAgB;MACvBD,OAAK,mDAAQC,yDAAa;mEAFlBX,cAAQ,KAISA,uBAAiB,kBAA7CC,oBAEI,KAFJa,UAEI,mBADCd,8BAAwB,yDAG/BJ,oBAYM,OAZNmB,UAYM,mBAXJnB,oBAOE;MANAY,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,sBAAsB;MAClCd,KAAK,EAAC,4BAA4B;iEACzBK,qBAAe;MACvBa,OAAK,yCAAEF,6EAAuB;MAC9BD,OAAK,mDAAQC,yDAAa;mEAFlBX,qBAAe,KAIEA,8BAAwB,kBAApDC,oBAEI,KAFJe,WAEI,mBADChB,qCAA+B,yDAGVA,eAAS,kBAArCC,oBAEI,KAFJgB,WAEI,mBADCjB,kBAAY,uDAEjBJ,oBAgBM,OAhBNsB,WAgBM,GAfJtB,oBAcS;MAbPD,KAAK,EAAC,cAAc;MACfwB,OAAK,yCAAER,yDAAa;MACxBS,QAAQ,IAAwCpB,cAAQ,IAAsBA,cAAQ,KAAuBA,uBAAiB,IAAsBA,qBAAe,KAAuBA,8BAAwB;;;MAgB3NJ,oBAGM,OAHNyB,WAGM,oBAHkB,kBAEtB,uBAAqD;IAA3CF,OAAK,yCAAER,iDAAS;IAAEhB,KAAK,EAAC;KAAQ,OAAK","names":["_imports_0","class","_createElementVNode","src","_hoisted_2","_hoisted_14","$data","_createElementBlock","_hoisted_1","_hoisted_4","_createVNode","_component_auth_wrapper","_hoisted_5","_hoisted_6","type","placeholder","onKeyup","$options","_hoisted_7","onInput","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","onClick","disabled","_hoisted_16"],"sourceRoot":"","sources":["/Users/swapneshnaik/Documents/URLshortenermain/src/pages/auth/forgot-password.vue"],"sourcesContent":["<template>\n    <div v-if=\"isloading\" class=\"loading-image\">\n      <img src=\"../../assets/loading.gif\" />\n    </div>\n    <div class=\"container\" v-else>\n      <auth-wrapper>\n        <div class=\"main-content\">\n          <div class=\"username\">\n            <input\n              type=\"text\"\n              placeholder=\"Phone number or email address\"\n              class=\"reset-password-input-field\"\n              v-model=\"username\"\n              @keyup.enter=\"resetPassword\"\n            />\n          </div>\n  \n          <div class=\"password\">\n            <input\n              type=\"password\"\n              placeholder=\"New Password\"\n              class=\"reset-password-input-field\"\n              v-model=\"password\"\n              @input=\"validatePassword\"\n              @keyup.enter=\"resetPassword\"\n            />\n            <p class=\"error-text\" v-if=\"showPasswordError\">\n              {{ showPasswordErrorMessage }}\n            </p>\n          </div>\n          <div class=\"consfirm-password\">\n            <input\n              type=\"password\"\n              placeholder=\"Confirm New Password\"\n              class=\"reset-password-input-field\"\n              v-model=\"confirmPassword\"\n              @input=\"validateConfirmPassword\"\n              @keyup.enter=\"resetPassword\"\n            />\n            <p class=\"error-text\" v-if=\"showConfirmPasswordError\">\n              {{ showConfirmPasswordErrorMessage }}\n            </p>\n          </div>\n          <p class=\"error-text\" v-if=\"showError\">\n            {{ errorMessage }}\n          </p>\n          <div class=\"login-button-div\">\n            <button\n              class=\"login-button\"\n              v-on:click=\"resetPassword\"\n              :disabled=\"\n                !(\n                  username &&\n                  password &&\n                  !showPasswordError &&\n                  confirmPassword &&\n                  !showConfirmPasswordError\n                )\n              \"\n            >\n              <strong>Reset Password</strong>\n            </button>\n          </div>\n        </div>\n      </auth-wrapper>\n  \n      <div class=\"lower-part\">\n        Back to login?\n        <div v-on:click=\"goToLogin\" class=\"login\">Login</div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import apiService from \"@/services/api.services\";\n  import authWrapper from \"../../components/auth-wrapper.vue\";\n  export default {\n    name: \"login.vue\",\n    components: {\n      \"auth-wrapper\": authWrapper,\n    },\n    methods: {\n      goToLogin() {\n        this.$router.push(\"/auth/login\");\n      },\n      resetPassword() {\n        //reset the password\n        if(this.username && this.password && this.confirmPassword){\n          let data = {username: this.username, password: this.password}\n        apiService.resetpassword(data).then(()=>{\n            this.showError=false\n            this.goToLogin()\n        }).catch((error)=>{\n          console.log(error)\n          this.showError=true\n          this.errorMessage =  error && error.response && error.response.data &&  error.response.data.message\n        })\n        }\n      \n      },\n      validatePassword() {\n         //regex passowrd check also check if password confirm password matches if confirm password present\n        let re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n        if (this.confirmPassword) {\n          if (!(this.confirmPassword == this.password)) {\n            this.showConfirmPasswordError = true;\n            this.showConfirmPasswordErrorMessage = \"Password does not match\";\n          } else {\n            this.showConfirmPasswordError = false;\n            this.showConfirmPasswordErrorMessage = \"\";\n          }\n        }\n        if (!re.test(this.password)) {\n          this.showPasswordError = true;\n          this.showPasswordErrorMessage =\n            \"Password must be at least 8 characters and contain at least 1 letter, 1 number and 1 special character.\";\n          return false;\n        } else {\n          this.showPasswordError = false;\n          this.showPasswordErrorMessage = \"\";\n          return true;\n        }\n      },\n      validateConfirmPassword() {\n        //check if password confirm password matches\n        if (!(this.confirmPassword == this.password)) {\n          this.showConfirmPasswordError = true;\n          this.showConfirmPasswordErrorMessage = \"Password does not match\";\n          return false;\n        } else {\n          this.showConfirmPasswordError = false;\n          this.showConfirmPasswordErrorMessage = \"\";\n          return true;\n        }\n      },\n    },\n    data() {\n      return {\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        showError: false,\n        errorMessage: \"\",\n        isloading: false,\n        showPasswordError: false,\n        showPasswordErrorMessage: \"\",\n        showConfirmPasswordError: false,\n        showConfirmPasswordErrorMessage: \"\",\n      };\n    },\n  };\n  </script>\n  \n  <style lang=\"scss\" scoped>\n  .container {\n    width: 350px;\n    background-color: rgb(255, 254, 254);\n    border: 2px black;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n  \n  .lower-part {\n    height: 100px;\n    margin-top: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  }\n  \n  .logo,\n  .main-content {\n    margin-left: 35px;\n    margin-right: 35px;\n  }\n  \n  .login-button {\n    width: 100%;\n    height: 36px;\n  }\n  \n  .reset-password-input-field {\n    width: 100%;\n    margin-top: 5px;\n    padding: 9px 0 7px 8px;\n    background: rgb(250, 250, 250);\n    border: 1px solid lightgrey;\n    outline: none;\n  }\n  \n  .save-password {\n    margin-top: 15px;\n  }\n  \n  .partition,\n  .forgot-password {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 15px;\n    font-size: 12px;\n    cursor: pointer;\n  }\n  \n  .forgot-password {\n    margin-top: 15px;\n  }\n  \n  .login {\n    padding-left: 5px;\n    cursor: pointer;\n    color: rgb(57, 98, 221);\n  }\n  \n  .login-google-text {\n    margin-left: 6px;\n  }\n  \n  .error-text {\n    color: red;\n    font-size: 11px;\n    margin-top: 3px;\n    margin-bottom: 2px;\n    display: flex;\n    justify-content: left;\n    text-align:left\n  }\n  \n  .login-button {\n    background-color: rgb(61, 124, 251);\n    border-radius: 5px;\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    margin-top: 15px;\n    font-size: 14px;\n    cursor: pointer;\n  }\n  \n  button[disabled] {\n    background-color: rgb(105, 104, 104);\n    cursor: default;\n  }\n  \n  .loading-image {\n    height: 100px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  \n    img {\n      height: 100%;\n    }\n  }\n  </style>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}