{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport authWrapper from \"../../components/auth-wrapper.vue\";\nimport apiService from \"../../services/api.services\";\nexport default {\n  name: \"register\",\n  components: {\n    \"auth-wrapper\": authWrapper\n  },\n  methods: {\n    login() {\n      this.$router.push(\"/auth/login\");\n    },\n    validateFullName() {\n      //regex to validate full name\n      let re = /^[a-zA-Z0-9-_'. ]+$/;\n      if (!re.test(this.formdata.full_name.value.trim())) {\n        this.formdata.full_name.showError = true;\n        this.formdata.full_name.errorMessage = \"Enter Valid Full name\";\n        return false;\n      } else {\n        this.formdata.full_name.showError = false;\n        this.formdata.full_name.errorMessage = \"\";\n        return true;\n      }\n    },\n    validatePhoneNumber() {\n      //regex to validate phone number\n      let re = /^\\+?([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/;\n      if (!re.test(this.formdata.phone_number.value)) {\n        this.formdata.phone_number.showError = true;\n        this.formdata.phone_number.errorMessage = \"Enter Valid Phone Number\";\n        return false;\n      } else {\n        this.formdata.phone_number.showError = false;\n        this.formdata.phone_number.errorMessage = \"\";\n        return true;\n      }\n    },\n    validateEmailAddress() {\n      //regex to validate email address\n      let re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (!re.test(this.formdata.email_address.value)) {\n        this.formdata.email_address.showError = true;\n        this.formdata.email_address.errorMessage = \"Enter valid Email Address\";\n        return false;\n      } else {\n        this.formdata.email_address.showError = false;\n        this.formdata.email_address.errorMessage = \"\";\n        return true;\n      }\n    },\n    validatePassword() {\n      //regex passowrd check also check if password confirm password matches if confirm password present\n      let re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n      if (this.formdata.confirm_password.value) {\n        if (!(this.formdata.confirm_password.value == this.formdata.password.value)) {\n          this.formdata.confirm_password.showError = true;\n          this.formdata.confirm_password.errorMessage = \"Password does not match\";\n        } else {\n          this.formdata.confirm_password.showError = false;\n          this.formdata.confirm_password.errorMessage = \"\";\n        }\n      }\n      if (!re.test(this.formdata.password.value)) {\n        this.formdata.password.showError = true;\n        this.formdata.password.errorMessage = \"Password must be at least 8 characters and contain at least 1 letter, 1 number and 1 special character.\";\n        return false;\n      } else {\n        this.formdata.password.showError = false;\n        this.formdata.password.errorMessage = \"\";\n        return true;\n      }\n    },\n    validateConfirmPassword() {\n      //check if password confirm password matches\n      if (!(this.formdata.confirm_password.value == this.formdata.password.value)) {\n        this.formdata.confirm_password.showError = true;\n        this.formdata.confirm_password.errorMessage = \"Password does not match\";\n        return false;\n      } else {\n        this.formdata.confirm_password.showError = false;\n        this.formdata.confirm_password.errorMessage = \"\";\n        return true;\n      }\n    },\n    registerClick() {\n      this.isloading = true;\n      let validform = true,\n        isValid;\n      //validate all the form data validate methods\n      for (let key in this.formdata) {\n        isValid = this.formdata[key].validate();\n        validform = validform && isValid;\n      }\n      const data = {\n        fullName: this.formdata.full_name.value,\n        phoneNumber: this.formdata.phone_number.value,\n        countryCode: 91,\n        emailAddress: this.formdata.email_address.value,\n        password: this.formdata.password.value\n      };\n      //if all validated then call the register to register user\n      if (validform) {\n        apiService.register(data).then(() => {\n          this.isloading = false;\n          this.$router.push(\"/main\");\n        }).catch(error => {\n          this.isloading = false;\n          this.showError = true;\n          this.errorMessage = error.response.data.message;\n        });\n      }\n      this.isloading = false;\n    }\n  },\n  data() {\n    return {\n      formdata: {\n        full_name: {\n          value: \"\",\n          showError: false,\n          errorMessage: \"\",\n          validate: this.validateFullName\n        },\n        phone_number: {\n          value: \"\",\n          showError: false,\n          errorMessage: \"\",\n          validate: this.validatePhoneNumber\n        },\n        email_address: {\n          value: \"\",\n          showError: false,\n          errorMessage: \"\",\n          validate: this.validateEmailAddress\n        },\n        password: {\n          value: \"\",\n          showError: false,\n          errorMessage: \"\",\n          validate: this.validatePassword\n        },\n        confirm_password: {\n          value: \"\",\n          showError: false,\n          errorMessage: \"\",\n          validate: this.validateConfirmPassword\n        }\n      },\n      showError: false,\n      errorMessage: \"\",\n      isloading: false\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["authWrapper","apiService","name","components","methods","login","$router","push","validateFullName","re","test","formdata","full_name","value","trim","showError","errorMessage","validatePhoneNumber","phone_number","validateEmailAddress","email_address","validatePassword","confirm_password","password","validateConfirmPassword","registerClick","isloading","validform","isValid","key","validate","data","fullName","phoneNumber","countryCode","emailAddress","register","then","catch","error","response","message"],"sourceRoot":"","sources":["C:\\Users\\shweta\\Documents\\GitHub\\urlshortner-main\\frontend\\src\\pages\\auth\\register.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"isloading\" class=\"loading-image\">\r\n       <img src=\"../../assets/loading.gif\"/>\r\n    </div>\r\n    <div class=\"container\" v-else>\r\n      <auth-wrapper>\r\n        <div class=\"upper\">\r\n          <div class=\"text-slogen\">Sign up to simplify your links</div>\r\n          <div class=\"full-name\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Full Name\"\r\n              class=\"register-input-field\"\r\n              v-model=\"formdata.full_name.value\"\r\n              @input=\"validateFullName\"\r\n              @keyup.enter=\"registerClick\"\r\n            />\r\n            <p class=\"error-text\" v-if=\"formdata.full_name.showError\">\r\n              {{ formdata.full_name.errorMessage }}\r\n            </p>\r\n          </div>\r\n  \r\n          <div class=\"phone-number\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Phone number\"\r\n              class=\"register-input-field\"\r\n              v-model=\"formdata.phone_number.value\"\r\n              @input=\"validatePhoneNumber\"\r\n              @keyup.enter=\"registerClick\"\r\n            />\r\n            <p class=\"error-text\" v-if=\"formdata.phone_number.showError\">\r\n              {{ formdata.phone_number.errorMessage }}\r\n            </p>\r\n          </div>\r\n  \r\n          <div class=\"email-address\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email address\"\r\n              class=\"register-input-field\"\r\n              v-model=\"formdata.email_address.value\"\r\n              @input=\"validateEmailAddress\"\r\n              @keyup.enter=\"registerClick\"\r\n            />\r\n            <p class=\"error-text\" v-if=\"formdata.email_address.showError\">\r\n              {{ formdata.email_address.errorMessage }}\r\n            </p>\r\n          </div>\r\n  \r\n          <div class=\"password\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              class=\"register-input-field\"\r\n              v-model=\"formdata.password.value\"\r\n              @input=\"validatePassword\"\r\n              @keyup.enter=\"registerClick\"\r\n            />\r\n            <p class=\"error-text\" v-if=\"formdata.password.showError\">\r\n              {{ formdata.password.errorMessage }}\r\n            </p>\r\n          </div>\r\n  \r\n          <div class=\"confirm-password\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              class=\"register-input-field\"\r\n              v-model=\"formdata.confirm_password.value\"\r\n              @input=\"validateConfirmPassword\"\r\n              @keyup.enter=\"registerClick\"\r\n            />\r\n            <p class=\"error-text\" v-if=\"formdata.confirm_password.showError\">\r\n              {{ formdata.confirm_password.errorMessage }}\r\n            </p>\r\n          </div>\r\n          <p class=\"error-text\" v-if=\"showError\">\r\n            {{ errorMessage }}\r\n          </p>\r\n  \r\n          <div class=\"policy\">\r\n            By signing up, you agree to our Terms, Privacy Policy and Cookies\r\n            Policy.\r\n          </div>\r\n  \r\n          <div class=\"register-button\" v-on:click=\"registerClick\">Sign up</div>\r\n        </div>\r\n      </auth-wrapper>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import authWrapper from \"../../components/auth-wrapper.vue\";\r\n  import apiService from \"../../services/api.services\";\r\n  export default {\r\n    name: \"register\",\r\n    components: {\r\n      \"auth-wrapper\": authWrapper,\r\n    },\r\n    methods: {\r\n      login() {\r\n        this.$router.push(\"/auth/login\");\r\n      },\r\n  \r\n      validateFullName() {\r\n        //regex to validate full name\r\n        let re = /^[a-zA-Z0-9-_'. ]+$/;\r\n        if (!re.test(this.formdata.full_name.value.trim())) {\r\n          this.formdata.full_name.showError = true;\r\n          this.formdata.full_name.errorMessage = \"Enter Valid Full name\";\r\n          return false;\r\n        } else {\r\n          this.formdata.full_name.showError = false;\r\n          this.formdata.full_name.errorMessage = \"\";\r\n          return true;\r\n        }\r\n      },\r\n      validatePhoneNumber() {\r\n        //regex to validate phone number\r\n        let re = /^\\+?([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/;\r\n        if (!re.test(this.formdata.phone_number.value)) {\r\n          this.formdata.phone_number.showError = true;\r\n          this.formdata.phone_number.errorMessage = \"Enter Valid Phone Number\";\r\n          return false;\r\n        } else {\r\n          this.formdata.phone_number.showError = false;\r\n          this.formdata.phone_number.errorMessage = \"\";\r\n          return true;\r\n        }\r\n      },\r\n      validateEmailAddress() {\r\n        //regex to validate email address\r\n        let re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (!re.test(this.formdata.email_address.value)) {\r\n          this.formdata.email_address.showError = true;\r\n          this.formdata.email_address.errorMessage = \"Enter valid Email Address\";\r\n          return false;\r\n        } else {\r\n          this.formdata.email_address.showError = false;\r\n          this.formdata.email_address.errorMessage = \"\";\r\n          return true;\r\n        }\r\n      },\r\n      validatePassword() {\r\n      //regex passowrd check also check if password confirm password matches if confirm password present\r\n        let re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n        if (this.formdata.confirm_password.value) {\r\n          if (\r\n            !(\r\n              this.formdata.confirm_password.value == this.formdata.password.value\r\n            )\r\n          ) {\r\n            this.formdata.confirm_password.showError = true;\r\n            this.formdata.confirm_password.errorMessage =\r\n              \"Password does not match\";\r\n          }\r\n          else{\r\n            this.formdata.confirm_password.showError = false;\r\n            this.formdata.confirm_password.errorMessage =\"\";\r\n            \r\n          }\r\n        }\r\n        if (!re.test(this.formdata.password.value)) {\r\n          this.formdata.password.showError = true;\r\n          this.formdata.password.errorMessage =\r\n            \"Password must be at least 8 characters and contain at least 1 letter, 1 number and 1 special character.\";\r\n          return false;\r\n        } else {\r\n          this.formdata.password.showError = false;\r\n          this.formdata.password.errorMessage = \"\";\r\n          return true;\r\n        }\r\n      },\r\n      validateConfirmPassword() {\r\n        //check if password confirm password matches\r\n        if (\r\n          !(this.formdata.confirm_password.value == this.formdata.password.value)\r\n        ) {\r\n          this.formdata.confirm_password.showError = true;\r\n          this.formdata.confirm_password.errorMessage = \"Password does not match\";\r\n          return false;\r\n        } else {\r\n          this.formdata.confirm_password.showError = false;\r\n          this.formdata.confirm_password.errorMessage = \"\";\r\n          return true;\r\n        }\r\n      },\r\n  \r\n      registerClick() {\r\n        this.isloading=true;\r\n        let validform = true,\r\n          isValid;\r\n        //validate all the form data validate methods\r\n        for (let key in this.formdata) {\r\n          isValid = this.formdata[key].validate();\r\n          validform = validform && isValid;\r\n        }\r\n  \r\n        const data = {\r\n          fullName: this.formdata.full_name.value,\r\n          phoneNumber: this.formdata.phone_number.value,\r\n          countryCode: 91,\r\n          emailAddress: this.formdata.email_address.value,\r\n          password: this.formdata.password.value,\r\n        };\r\n        //if all validated then call the register to register user\r\n        if (validform) {\r\n          apiService\r\n            .register(data)\r\n            .then(() => {\r\n              this.isloading=false\r\n              this.$router.push(\"/main\");\r\n            })\r\n            .catch((error) => {\r\n              this.isloading=false\r\n              this.showError = true;\r\n              this.errorMessage = error.response.data.message;\r\n            });\r\n        }\r\n        this.isloading=false;\r\n      },\r\n    },\r\n  \r\n    data() {\r\n      return {\r\n        formdata: {\r\n          full_name: {\r\n            value: \"\",\r\n            showError: false,\r\n            errorMessage: \"\",\r\n            validate: this.validateFullName,\r\n          },\r\n  \r\n          phone_number: {\r\n            value: \"\",\r\n            showError: false,\r\n            errorMessage: \"\",\r\n            validate: this.validatePhoneNumber,\r\n          },\r\n  \r\n          email_address: {\r\n            value: \"\",\r\n            showError: false,\r\n            errorMessage: \"\",\r\n            validate: this.validateEmailAddress,\r\n          },\r\n  \r\n          password: {\r\n            value: \"\",\r\n            showError: false,\r\n            errorMessage: \"\",\r\n            validate: this.validatePassword,\r\n          },\r\n  \r\n          confirm_password: {\r\n            value: \"\",\r\n            showError: false,\r\n            errorMessage: \"\",\r\n            validate: this.validateConfirmPassword,\r\n          },\r\n        },\r\n        showError: false,\r\n        errorMessage: \"\",\r\n        isloading:false\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  .container {\r\n    width: 350px;\r\n    border: 2px black;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  \r\n  .upper-part {\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  }\r\n  \r\n  .upper {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n  }\r\n  \r\n  .lower-part {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n    height: 100px;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  }\r\n  \r\n  .register-input-field {\r\n    width: 100%;\r\n    margin-top: 5px;\r\n    padding: 9px 0 7px 8px;\r\n    background: rgb(250, 250, 250);\r\n    border: 1px solid lightgrey;\r\n    outline: none;\r\n  }\r\n  \r\n  .text-slogen {\r\n    font-size: 16px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .register-button {\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    height: 30px;\r\n    margin-top: 15px;\r\n    background-color: rgb(63, 165, 63);\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .partition-or {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 15px;\r\n    font-size: 12px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .policy {\r\n    margin-left: 10px;\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .log-in {\r\n    padding-left: 5px;\r\n    color: rgb(57, 98, 221);\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .error-text {\r\n    color: red;\r\n    font-size: 11px;\r\n    margin-top: 3px;\r\n    margin-bottom: 2px;\r\n    text-align: left;\r\n  }\r\n  \r\n  .loading-image{\r\n    height:100px;\r\n    position:absolute;\r\n    top:50%;\r\n    left:50%;\r\n    transform: translate(-50%,-50%);\r\n  \r\n    img{\r\n      height:100%;\r\n  \r\n    }\r\n  }\r\n  </style>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}