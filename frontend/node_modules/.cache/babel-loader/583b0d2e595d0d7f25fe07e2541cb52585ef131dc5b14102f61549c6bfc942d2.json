{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiService from \"@/services/api.services\";\nimport authWrapper from \"../../components/auth-wrapper.vue\";\nexport default {\n  name: \"login.vue\",\n  components: {\n    \"auth-wrapper\": authWrapper\n  },\n  methods: {\n    goToLogin() {\n      this.$router.push(\"/auth/login\");\n    },\n    resetPassword() {\n      //reset the password\n      if (this.username && this.password && this.confirmPassword) {\n        let data = {\n          username: this.username,\n          password: this.password\n        };\n        apiService.resetpassword(data).then(() => {\n          this.showError = false;\n          this.goToLogin();\n        }).catch(error => {\n          console.log(error);\n          this.showError = true;\n          this.errorMessage = error && error.response && error.response.data && error.response.data.message;\n        });\n      }\n    },\n    validatePassword() {\n      //regex passowrd check also check if password confirm password matches if confirm password present\n      let re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n      if (this.confirmPassword) {\n        if (!(this.confirmPassword == this.password)) {\n          this.showConfirmPasswordError = true;\n          this.showConfirmPasswordErrorMessage = \"Password does not match\";\n        } else {\n          this.showConfirmPasswordError = false;\n          this.showConfirmPasswordErrorMessage = \"\";\n        }\n      }\n      if (!re.test(this.password)) {\n        this.showPasswordError = true;\n        this.showPasswordErrorMessage = \"Password must be at least 8 characters and contain at least 1 letter, 1 number and 1 special character.\";\n        return false;\n      } else {\n        this.showPasswordError = false;\n        this.showPasswordErrorMessage = \"\";\n        return true;\n      }\n    },\n    validateConfirmPassword() {\n      //check if password confirm password matches\n      if (!(this.confirmPassword == this.password)) {\n        this.showConfirmPasswordError = true;\n        this.showConfirmPasswordErrorMessage = \"Password does not match\";\n        return false;\n      } else {\n        this.showConfirmPasswordError = false;\n        this.showConfirmPasswordErrorMessage = \"\";\n        return true;\n      }\n    }\n  },\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      showError: false,\n      errorMessage: \"\",\n      isloading: false,\n      showPasswordError: false,\n      showPasswordErrorMessage: \"\",\n      showConfirmPasswordError: false,\n      showConfirmPasswordErrorMessage: \"\"\n    };\n  }\n};","map":{"version":3,"mappings":";AAyEE,OAAOA,UAAS,MAAO,yBAAyB;AAChD,OAAOC,WAAU,MAAO,mCAAmC;AAC3D,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACV,cAAc,EAAEF;EAClB,CAAC;EACDG,OAAO,EAAE;IACPC,SAAS,GAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC,CAAC;IACDC,aAAa,GAAG;MACd;MACA,IAAG,IAAI,CAACC,QAAO,IAAK,IAAI,CAACC,QAAO,IAAK,IAAI,CAACC,eAAe,EAAC;QACxD,IAAIC,IAAG,GAAI;UAACH,QAAQ,EAAE,IAAI,CAACA,QAAQ;UAAEC,QAAQ,EAAE,IAAI,CAACA;QAAQ;QAC9DV,UAAU,CAACa,aAAa,CAACD,IAAI,CAAC,CAACE,IAAI,CAAC,MAAI;UACpC,IAAI,CAACC,SAAS,GAAC,KAAI;UACnB,IAAI,CAACV,SAAS,EAAC;QACnB,CAAC,CAAC,CAACW,KAAK,CAAEC,KAAK,IAAG;UAChBC,OAAO,CAACC,GAAG,CAACF,KAAK;UACjB,IAAI,CAACF,SAAS,GAAC,IAAG;UAClB,IAAI,CAACK,YAAW,GAAKH,KAAI,IAAKA,KAAK,CAACI,QAAO,IAAKJ,KAAK,CAACI,QAAQ,CAACT,IAAG,IAAMK,KAAK,CAACI,QAAQ,CAACT,IAAI,CAACU,OAAM;QACpG,CAAC;MACD;IAEF,CAAC;IACDC,gBAAgB,GAAG;MAChB;MACD,IAAIC,EAAC,GAAI,uDAAuD;MAChE,IAAI,IAAI,CAACb,eAAe,EAAE;QACxB,IAAI,EAAE,IAAI,CAACA,eAAc,IAAK,IAAI,CAACD,QAAQ,CAAC,EAAE;UAC5C,IAAI,CAACe,wBAAuB,GAAI,IAAI;UACpC,IAAI,CAACC,+BAA8B,GAAI,yBAAyB;QAClE,OAAO;UACL,IAAI,CAACD,wBAAuB,GAAI,KAAK;UACrC,IAAI,CAACC,+BAA8B,GAAI,EAAE;QAC3C;MACF;MACA,IAAI,CAACF,EAAE,CAACG,IAAI,CAAC,IAAI,CAACjB,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACkB,iBAAgB,GAAI,IAAI;QAC7B,IAAI,CAACC,wBAAuB,GAC1B,yGAAyG;QAC3G,OAAO,KAAK;MACd,OAAO;QACL,IAAI,CAACD,iBAAgB,GAAI,KAAK;QAC9B,IAAI,CAACC,wBAAuB,GAAI,EAAE;QAClC,OAAO,IAAI;MACb;IACF,CAAC;IACDC,uBAAuB,GAAG;MACxB;MACA,IAAI,EAAE,IAAI,CAACnB,eAAc,IAAK,IAAI,CAACD,QAAQ,CAAC,EAAE;QAC5C,IAAI,CAACe,wBAAuB,GAAI,IAAI;QACpC,IAAI,CAACC,+BAA8B,GAAI,yBAAyB;QAChE,OAAO,KAAK;MACd,OAAO;QACL,IAAI,CAACD,wBAAuB,GAAI,KAAK;QACrC,IAAI,CAACC,+BAA8B,GAAI,EAAE;QACzC,OAAO,IAAI;MACb;IACF;EACF,CAAC;EACDd,IAAI,GAAG;IACL,OAAO;MACLH,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBI,SAAS,EAAE,KAAK;MAChBK,YAAY,EAAE,EAAE;MAChBW,SAAS,EAAE,KAAK;MAChBH,iBAAiB,EAAE,KAAK;MACxBC,wBAAwB,EAAE,EAAE;MAC5BJ,wBAAwB,EAAE,KAAK;MAC/BC,+BAA+B,EAAE;IACnC,CAAC;EACH;AACF,CAAC","names":["apiService","authWrapper","name","components","methods","goToLogin","$router","push","resetPassword","username","password","confirmPassword","data","resetpassword","then","showError","catch","error","console","log","errorMessage","response","message","validatePassword","re","showConfirmPasswordError","showConfirmPasswordErrorMessage","test","showPasswordError","showPasswordErrorMessage","validateConfirmPassword","isloading"],"sourceRoot":"","sources":["C:\\Users\\shweta\\Documents\\GitHub\\urlshortner-main\\frontend\\src\\pages\\auth\\forgot-password.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"isloading\" class=\"loading-image\">\r\n      <img src=\"../../assets/loading.gif\" />\r\n    </div>\r\n    <div class=\"container\" v-else>\r\n      <auth-wrapper>\r\n        <div class=\"main-content\">\r\n          <div class=\"username\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Phone number or email address\"\r\n              class=\"reset-password-input-field\"\r\n              v-model=\"username\"\r\n              @keyup.enter=\"resetPassword\"\r\n            />\r\n          </div>\r\n          <div class=\"password\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              class=\"reset-password-input-field\"\r\n              v-model=\"password\"\r\n              @input=\"validatePassword\"\r\n              @keyup.enter=\"resetPassword\"\r\n            />\r\n            <p class=\"error-text\" v-if=\"showPasswordError\">\r\n              {{ showPasswordErrorMessage }}\r\n            </p>\r\n          </div>\r\n          <div class=\"consfirm-password\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm New Password\"\r\n              class=\"reset-password-input-field\"\r\n              v-model=\"confirmPassword\"\r\n              @input=\"validateConfirmPassword\"\r\n              @keyup.enter=\"resetPassword\"\r\n            />\r\n            <p class=\"error-text\" v-if=\"showConfirmPasswordError\">\r\n              {{ showConfirmPasswordErrorMessage }}\r\n            </p>\r\n          </div>\r\n          <p class=\"error-text\" v-if=\"showError\">\r\n            {{ errorMessage }}\r\n          </p>\r\n          <div class=\"login-button-div\">\r\n            <button\r\n              class=\"login-button\"\r\n              v-on:click=\"resetPassword\"\r\n              :disabled=\"\r\n                !(\r\n                  username &&\r\n                  password &&\r\n                  !showPasswordError &&\r\n                  confirmPassword &&\r\n                  !showConfirmPasswordError\r\n                )\r\n              \"\r\n            >\r\n              <strong>Reset Password</strong>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </auth-wrapper>\r\n  \r\n      <div class=\"lower-part\">\r\n        Back to login?\r\n        <div v-on:click=\"goToLogin\" class=\"login\">Login</div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import apiService from \"@/services/api.services\";\r\n  import authWrapper from \"../../components/auth-wrapper.vue\";\r\n  export default {\r\n    name: \"login.vue\",\r\n    components: {\r\n      \"auth-wrapper\": authWrapper,\r\n    },\r\n    methods: {\r\n      goToLogin() {\r\n        this.$router.push(\"/auth/login\");\r\n      },\r\n      resetPassword() {\r\n        //reset the password\r\n        if(this.username && this.password && this.confirmPassword){\r\n          let data = {username: this.username, password: this.password}\r\n        apiService.resetpassword(data).then(()=>{\r\n            this.showError=false\r\n            this.goToLogin()\r\n        }).catch((error)=>{\r\n          console.log(error)\r\n          this.showError=true\r\n          this.errorMessage =  error && error.response && error.response.data &&  error.response.data.message\r\n        })\r\n        }\r\n      \r\n      },\r\n      validatePassword() {\r\n         //regex passowrd check also check if password confirm password matches if confirm password present\r\n        let re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n        if (this.confirmPassword) {\r\n          if (!(this.confirmPassword == this.password)) {\r\n            this.showConfirmPasswordError = true;\r\n            this.showConfirmPasswordErrorMessage = \"Password does not match\";\r\n          } else {\r\n            this.showConfirmPasswordError = false;\r\n            this.showConfirmPasswordErrorMessage = \"\";\r\n          }\r\n        }\r\n        if (!re.test(this.password)) {\r\n          this.showPasswordError = true;\r\n          this.showPasswordErrorMessage =\r\n            \"Password must be at least 8 characters and contain at least 1 letter, 1 number and 1 special character.\";\r\n          return false;\r\n        } else {\r\n          this.showPasswordError = false;\r\n          this.showPasswordErrorMessage = \"\";\r\n          return true;\r\n        }\r\n      },\r\n      validateConfirmPassword() {\r\n        //check if password confirm password matches\r\n        if (!(this.confirmPassword == this.password)) {\r\n          this.showConfirmPasswordError = true;\r\n          this.showConfirmPasswordErrorMessage = \"Password does not match\";\r\n          return false;\r\n        } else {\r\n          this.showConfirmPasswordError = false;\r\n          this.showConfirmPasswordErrorMessage = \"\";\r\n          return true;\r\n        }\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        showError: false,\r\n        errorMessage: \"\",\r\n        isloading: false,\r\n        showPasswordError: false,\r\n        showPasswordErrorMessage: \"\",\r\n        showConfirmPasswordError: false,\r\n        showConfirmPasswordErrorMessage: \"\",\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  .container {\r\n    width: 350px;\r\n    background-color: rgb(255, 254, 254);\r\n    border: 2px black;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  \r\n  .lower-part {\r\n    height: 100px;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  }\r\n  \r\n  .logo,\r\n  .main-content {\r\n    margin-left: 35px;\r\n    margin-right: 35px;\r\n  }\r\n  \r\n  .login-button {\r\n    width: 100%;\r\n    height: 36px;\r\n  }\r\n  \r\n  .reset-password-input-field {\r\n    width: 100%;\r\n    margin-top: 5px;\r\n    padding: 9px 0 7px 8px;\r\n    background: rgb(250, 250, 250);\r\n    border: 1px solid lightgrey;\r\n    outline: none;\r\n  }\r\n  \r\n  .save-password {\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .partition,\r\n  .forgot-password {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 15px;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .forgot-password {\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .login {\r\n    padding-left: 5px;\r\n    cursor: pointer;\r\n    color: rgb(57, 98, 221);\r\n  }\r\n  \r\n  .login-google-text {\r\n    margin-left: 6px;\r\n  }\r\n  \r\n  .error-text {\r\n    color: red;\r\n    font-size: 11px;\r\n    margin-top: 3px;\r\n    margin-bottom: 2px;\r\n    display: flex;\r\n    justify-content: left;\r\n    text-align:left\r\n  }\r\n  \r\n  .login-button {\r\n    background-color: rgb(61, 124, 251);\r\n    border-radius: 5px;\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    margin-top: 15px;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button[disabled] {\r\n    background-color: rgb(105, 104, 104);\r\n    cursor: default;\r\n  }\r\n  \r\n  .loading-image {\r\n    height: 100px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  \r\n    img {\r\n      height: 100%;\r\n    }\r\n  }\r\n  </style>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}