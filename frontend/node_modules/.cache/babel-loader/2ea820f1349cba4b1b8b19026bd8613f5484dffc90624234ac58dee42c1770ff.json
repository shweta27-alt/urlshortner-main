{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiService from \"@/services/api.services\";\nimport authWrapper from \"../../components/auth-wrapper.vue\";\nexport default {\n  name: \"login.vue\",\n  components: {\n    \"auth-wrapper\": authWrapper\n  },\n  methods: {\n    goToLogin() {\n      this.$router.push(\"/auth/login\");\n    },\n    resetPassword() {\n      //reset the password\n      if (this.username && this.password && this.confirmPassword) {\n        let data = {\n          username: this.username,\n          password: this.password\n        };\n        apiService.resetpassword(data).then(() => {\n          this.showError = false;\n          this.goToLogin();\n        }).catch(error => {\n          console.log(error);\n          this.showError = true;\n          this.errorMessage = error && error.response && error.response.data && error.response.data.message;\n        });\n      }\n    },\n    validatePassword() {\n      //regex passowrd check also check if password confirm password matches if confirm password present\n      let re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n      if (this.confirmPassword) {\n        if (!(this.confirmPassword == this.password)) {\n          this.showConfirmPasswordError = true;\n          this.showConfirmPasswordErrorMessage = \"Password does not match\";\n        } else {\n          this.showConfirmPasswordError = false;\n          this.showConfirmPasswordErrorMessage = \"\";\n        }\n      }\n      if (!re.test(this.password)) {\n        this.showPasswordError = true;\n        this.showPasswordErrorMessage = \"Password must be at least 8 characters and contain at least 1 letter, 1 number and 1 special character.\";\n        return false;\n      } else {\n        this.showPasswordError = false;\n        this.showPasswordErrorMessage = \"\";\n        return true;\n      }\n    },\n    validateConfirmPassword() {\n      //check if password confirm password matches\n      if (!(this.confirmPassword == this.password)) {\n        this.showConfirmPasswordError = true;\n        this.showConfirmPasswordErrorMessage = \"Password does not match\";\n        return false;\n      } else {\n        this.showConfirmPasswordError = false;\n        this.showConfirmPasswordErrorMessage = \"\";\n        return true;\n      }\n    }\n  },\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      showError: false,\n      errorMessage: \"\",\n      isloading: false,\n      showPasswordError: false,\n      showPasswordErrorMessage: \"\",\n      showConfirmPasswordError: false,\n      showConfirmPasswordErrorMessage: \"\"\n    };\n  }\n};","map":{"version":3,"mappings":";AAyEE,OAAOA,UAAS,MAAO,yBAAyB;AAChD,OAAOC,WAAU,MAAO,mCAAmC;AAC3D,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACV,cAAc,EAAEF;EAClB,CAAC;EACDG,OAAO,EAAE;IACPC,SAAS,GAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC,CAAC;IACDC,aAAa,GAAG;MACd;MACA,IAAG,IAAI,CAACC,QAAO,IAAK,IAAI,CAACC,QAAO,IAAK,IAAI,CAACC,eAAe,EAAC;QACxD,IAAIC,IAAG,GAAI;UAACH,QAAQ,EAAE,IAAI,CAACA,QAAQ;UAAEC,QAAQ,EAAE,IAAI,CAACA;QAAQ;QAC9DV,UAAU,CAACa,aAAa,CAACD,IAAI,CAAC,CAACE,IAAI,CAAC,MAAI;UACpC,IAAI,CAACC,SAAS,GAAC,KAAI;UACnB,IAAI,CAACV,SAAS,EAAC;QACnB,CAAC,CAAC,CAACW,KAAK,CAAEC,KAAK,IAAG;UAChBC,OAAO,CAACC,GAAG,CAACF,KAAK;UACjB,IAAI,CAACF,SAAS,GAAC,IAAG;UAClB,IAAI,CAACK,YAAW,GAAKH,KAAI,IAAKA,KAAK,CAACI,QAAO,IAAKJ,KAAK,CAACI,QAAQ,CAACT,IAAG,IAAMK,KAAK,CAACI,QAAQ,CAACT,IAAI,CAACU,OAAM;QACpG,CAAC;MACD;IAEF,CAAC;IACDC,gBAAgB,GAAG;MAChB;MACD,IAAIC,EAAC,GAAI,uDAAuD;MAChE,IAAI,IAAI,CAACb,eAAe,EAAE;QACxB,IAAI,EAAE,IAAI,CAACA,eAAc,IAAK,IAAI,CAACD,QAAQ,CAAC,EAAE;UAC5C,IAAI,CAACe,wBAAuB,GAAI,IAAI;UACpC,IAAI,CAACC,+BAA8B,GAAI,yBAAyB;QAClE,OAAO;UACL,IAAI,CAACD,wBAAuB,GAAI,KAAK;UACrC,IAAI,CAACC,+BAA8B,GAAI,EAAE;QAC3C;MACF;MACA,IAAI,CAACF,EAAE,CAACG,IAAI,CAAC,IAAI,CAACjB,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACkB,iBAAgB,GAAI,IAAI;QAC7B,IAAI,CAACC,wBAAuB,GAC1B,yGAAyG;QAC3G,OAAO,KAAK;MACd,OAAO;QACL,IAAI,CAACD,iBAAgB,GAAI,KAAK;QAC9B,IAAI,CAACC,wBAAuB,GAAI,EAAE;QAClC,OAAO,IAAI;MACb;IACF,CAAC;IACDC,uBAAuB,GAAG;MACxB;MACA,IAAI,EAAE,IAAI,CAACnB,eAAc,IAAK,IAAI,CAACD,QAAQ,CAAC,EAAE;QAC5C,IAAI,CAACe,wBAAuB,GAAI,IAAI;QACpC,IAAI,CAACC,+BAA8B,GAAI,yBAAyB;QAChE,OAAO,KAAK;MACd,OAAO;QACL,IAAI,CAACD,wBAAuB,GAAI,KAAK;QACrC,IAAI,CAACC,+BAA8B,GAAI,EAAE;QACzC,OAAO,IAAI;MACb;IACF;EACF,CAAC;EACDd,IAAI,GAAG;IACL,OAAO;MACLH,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBI,SAAS,EAAE,KAAK;MAChBK,YAAY,EAAE,EAAE;MAChBW,SAAS,EAAE,KAAK;MAChBH,iBAAiB,EAAE,KAAK;MACxBC,wBAAwB,EAAE,EAAE;MAC5BJ,wBAAwB,EAAE,KAAK;MAC/BC,+BAA+B,EAAE;IACnC,CAAC;EACH;AACF,CAAC","names":["apiService","authWrapper","name","components","methods","goToLogin","$router","push","resetPassword","username","password","confirmPassword","data","resetpassword","then","showError","catch","error","console","log","errorMessage","response","message","validatePassword","re","showConfirmPasswordError","showConfirmPasswordErrorMessage","test","showPasswordError","showPasswordErrorMessage","validateConfirmPassword","isloading"],"sourceRoot":"","sources":["/Users/swapneshnaik/Documents/URLshortenermain/frontend/src/pages/auth/forgot-password.vue"],"sourcesContent":["<template>\n    <div v-if=\"isloading\" class=\"loading-image\">\n      <img src=\"../../assets/loading.gif\" />\n    </div>\n    <div class=\"container\" v-else>\n      <auth-wrapper>\n        <div class=\"main-content\">\n          <div class=\"username\">\n            <input\n              type=\"text\"\n              placeholder=\"Phone number or email address\"\n              class=\"reset-password-input-field\"\n              v-model=\"username\"\n              @keyup.enter=\"resetPassword\"\n            />\n          </div>\n          <div class=\"password\">\n            <input\n              type=\"password\"\n              placeholder=\"New Password\"\n              class=\"reset-password-input-field\"\n              v-model=\"password\"\n              @input=\"validatePassword\"\n              @keyup.enter=\"resetPassword\"\n            />\n            <p class=\"error-text\" v-if=\"showPasswordError\">\n              {{ showPasswordErrorMessage }}\n            </p>\n          </div>\n          <div class=\"consfirm-password\">\n            <input\n              type=\"password\"\n              placeholder=\"Confirm New Password\"\n              class=\"reset-password-input-field\"\n              v-model=\"confirmPassword\"\n              @input=\"validateConfirmPassword\"\n              @keyup.enter=\"resetPassword\"\n            />\n            <p class=\"error-text\" v-if=\"showConfirmPasswordError\">\n              {{ showConfirmPasswordErrorMessage }}\n            </p>\n          </div>\n          <p class=\"error-text\" v-if=\"showError\">\n            {{ errorMessage }}\n          </p>\n          <div class=\"login-button-div\">\n            <button\n              class=\"login-button\"\n              v-on:click=\"resetPassword\"\n              :disabled=\"\n                !(\n                  username &&\n                  password &&\n                  !showPasswordError &&\n                  confirmPassword &&\n                  !showConfirmPasswordError\n                )\n              \"\n            >\n              <strong>Reset Password</strong>\n            </button>\n          </div>\n        </div>\n      </auth-wrapper>\n  \n      <div class=\"lower-part\">\n        Back to login?\n        <div v-on:click=\"goToLogin\" class=\"login\">Login</div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import apiService from \"@/services/api.services\";\n  import authWrapper from \"../../components/auth-wrapper.vue\";\n  export default {\n    name: \"login.vue\",\n    components: {\n      \"auth-wrapper\": authWrapper,\n    },\n    methods: {\n      goToLogin() {\n        this.$router.push(\"/auth/login\");\n      },\n      resetPassword() {\n        //reset the password\n        if(this.username && this.password && this.confirmPassword){\n          let data = {username: this.username, password: this.password}\n        apiService.resetpassword(data).then(()=>{\n            this.showError=false\n            this.goToLogin()\n        }).catch((error)=>{\n          console.log(error)\n          this.showError=true\n          this.errorMessage =  error && error.response && error.response.data &&  error.response.data.message\n        })\n        }\n      \n      },\n      validatePassword() {\n         //regex passowrd check also check if password confirm password matches if confirm password present\n        let re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n        if (this.confirmPassword) {\n          if (!(this.confirmPassword == this.password)) {\n            this.showConfirmPasswordError = true;\n            this.showConfirmPasswordErrorMessage = \"Password does not match\";\n          } else {\n            this.showConfirmPasswordError = false;\n            this.showConfirmPasswordErrorMessage = \"\";\n          }\n        }\n        if (!re.test(this.password)) {\n          this.showPasswordError = true;\n          this.showPasswordErrorMessage =\n            \"Password must be at least 8 characters and contain at least 1 letter, 1 number and 1 special character.\";\n          return false;\n        } else {\n          this.showPasswordError = false;\n          this.showPasswordErrorMessage = \"\";\n          return true;\n        }\n      },\n      validateConfirmPassword() {\n        //check if password confirm password matches\n        if (!(this.confirmPassword == this.password)) {\n          this.showConfirmPasswordError = true;\n          this.showConfirmPasswordErrorMessage = \"Password does not match\";\n          return false;\n        } else {\n          this.showConfirmPasswordError = false;\n          this.showConfirmPasswordErrorMessage = \"\";\n          return true;\n        }\n      },\n    },\n    data() {\n      return {\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        showError: false,\n        errorMessage: \"\",\n        isloading: false,\n        showPasswordError: false,\n        showPasswordErrorMessage: \"\",\n        showConfirmPasswordError: false,\n        showConfirmPasswordErrorMessage: \"\",\n      };\n    },\n  };\n  </script>\n  \n  <style lang=\"scss\" scoped>\n  .container {\n    width: 350px;\n    background-color: rgb(255, 254, 254);\n    border: 2px black;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n  \n  .lower-part {\n    height: 100px;\n    margin-top: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  }\n  \n  .logo,\n  .main-content {\n    margin-left: 35px;\n    margin-right: 35px;\n  }\n  \n  .login-button {\n    width: 100%;\n    height: 36px;\n  }\n  \n  .reset-password-input-field {\n    width: 100%;\n    margin-top: 5px;\n    padding: 9px 0 7px 8px;\n    background: rgb(250, 250, 250);\n    border: 1px solid lightgrey;\n    outline: none;\n  }\n  \n  .save-password {\n    margin-top: 15px;\n  }\n  \n  .partition,\n  .forgot-password {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 15px;\n    font-size: 12px;\n    cursor: pointer;\n  }\n  \n  .forgot-password {\n    margin-top: 15px;\n  }\n  \n  .login {\n    padding-left: 5px;\n    cursor: pointer;\n    color: rgb(57, 98, 221);\n  }\n  \n  .login-google-text {\n    margin-left: 6px;\n  }\n  \n  .error-text {\n    color: red;\n    font-size: 11px;\n    margin-top: 3px;\n    margin-bottom: 2px;\n    display: flex;\n    justify-content: left;\n    text-align:left\n  }\n  \n  .login-button {\n    background-color: rgb(61, 124, 251);\n    border-radius: 5px;\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    margin-top: 15px;\n    font-size: 14px;\n    cursor: pointer;\n  }\n  \n  button[disabled] {\n    background-color: rgb(105, 104, 104);\n    cursor: default;\n  }\n  \n  .loading-image {\n    height: 100px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  \n    img {\n      height: 100%;\n    }\n  }\n  </style>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}